Activity: Abstract Factory Design Pattern with Parts Manufacturing

Problem Statement:
A robotics company named "RoboCraft" is developing a new generation of robots.
Each robot consists of several components, including a Body, Arms, and Sensors.
The company wants to implement the Abstract Factory Design Pattern to create families
of related components.

Requirements:

Create an interface named "RobotPart" with a method "assemble" to define how each part is assembled.

Implement concrete classes "MetalBody," "SteelArms," and "SensorPack" that implement the "RobotPart"
interface.

Create an abstract factory interface named "RobotFactory" with methods "createBody," "createArms," and
"createSensors" to manufacture each part of the robot.

Implement concrete factories "HighTechRobotFactory" and "IndustrialRobotFactory" that implement the
"RobotFactory" interface.

Each concrete factory should produce a family of related components: "HighTechRobotFactory" creates
parts with advanced materials, while "IndustrialRobotFactory" creates parts suitable for heavy-duty tasks.

In the application, allow the user to choose a type of robot they want to build (High-Tech or Industrial).
Use the corresponding factory to create all parts of the robot and display the details of each part's assembly.
Example Output:

Copy code
Choose the type of robot you want to build:
1. High-Tech Robot
2. Industrial Robot
Enter your choice: 1

Assembling High-Tech Robot Components:
High-Tech Metal Body assembled.
High-Tech Steel Arms assembled.
High-Tech Sensor Pack assembled.

High-Tech Robot Assembled Successfully!
This problem encourages students to design a system where the creation of related product parts is
encapsulated within separate factories, allowing easy extension for new types of robots in the future.